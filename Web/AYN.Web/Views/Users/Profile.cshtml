@using System.Security.Claims
@using AYN.Web.Infrastructure.Extensions

@model AYN.Web.ViewModels.Users.GetUserProfileBaseDetailsViewModel

@{
    this.ViewData["Title"] = "Profile";
}

@if (this.TempData.ContainsKey("Message"))
{
    <div class="alert alert-primary alert-dismissible fade show" role="alert">
        <strong>Heeeey!</strong> @this.TempData["Message"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<main>
    <div class="card ">
        <img src="@this.Model.ThumbnailImageUrl" alt="">
        <div class="card-body social-prof">
            <div class="wrapper">
                <img src="@this.Model.AvatarImageUrl" alt="" class="user-profile">
                @if (this.User.GetId() == this.Model.Id)
                {
                    <h6>
                        <a class="text-primary" asp-controller="Users" asp-action="EditGeneralInfo" asp-route-id="@Model.Id">
                            <i class="fas fa-user-edit"></i>
                        </a>
                    </h6>
                }
                <h3 class="mb-3">@Model.FirstName @Model.LastName</h3>
                <a href="@Model.FacebookUrl">
                    @{var color = this.Model.FacebookUrl != null ? "info" : "muted";}
                    <i class="fab fa-facebook-f text-@color font-weight-bolder ml-3" style="font-size: 1.5rem;"></i>
                </a>
                <a href="@Model.InstagramUrl">
                    @{ color = this.Model.InstagramUrl != null ? "danger" : "muted";}
                    <i class="fab fa-instagram text-@color font-weight-bolder ml-3" style="font-size: 1.5rem;"></i>
                </a>
                <a href="@Model.TikTokUrl">
                    @{ color = this.Model.TikTokUrl != null ? "dark" : "muted";}
                    <i class="fab fa-tiktok text-@color font-weight-bolder ml-3" style="font-size: 1.5rem;"></i>
                </a>
                <a href="@Model.WebsiteUrl">
                    @{ color = this.Model.WebsiteUrl != null ? "primary" : "muted";}
                    <i class="fas fa-globe text-@color font-weight-bolder ml-3" style="font-size: 1.5rem;"></i>
                </a>
                <a href="@Model.TwitterUrl">
                    @{ color = this.Model.TwitterUrl != null ? "info" : "muted";}
                    <i class="fab fa-twitter text-@color font-weight-bolder ml-3" style="font-size: 1.5rem;"></i>
                </a>
                @if (this.User.GetId() != this.Model.Id)
                {
                    if (this.Model.IsCurrentUserFollower)
                    {
                        <form method="post" id="followForm" asp-controller="Users" asp-action="Unfollow" asp-route-id="@this.Model.Id">
                            <button onclick="followForm.submit()" class="btn btn-danger btn-sm"><i class="fas fa-star"></i> Unfollow</button>
                        </form>
                    }
                    else
                    {
                        <form method="post" id="followForm" asp-controller="Users" asp-action="Follow" asp-route-id="@this.Model.Id">
                            <button onclick="followForm.submit()" class="btn btn-success btn-sm"><i class="fas fa-star"></i> Follow</button>
                        </form>
                    }
                }
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-3">
            <div class="card text-center">
                <div class="card-body">
                    <div class="h7">
                        <strong>About:</strong>
                        <p>@Model.About</p>
                    </div>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">
                        <div class="h6 text-muted">Followers</div>
                        <a asp-controller="Users" asp-action="Followers" asp-route-userId="@this.Model.Id" class="h5">@Model.FolloweesCount</a>
                    </li>
                    <li class="list-group-item">
                        <div class="h6 text-muted">Following</div>
                        <a asp-controller="Users" asp-action="Followees" asp-route-userId="@this.Model.Id" class="h5">@Model.FollowingsCount</a>
                    </li>
                </ul>
            </div>
            @await this.Component.InvokeAsync("GetUserRecentAds", new { userId = this.Model.Id })
            @await this.Component.InvokeAsync("GetUserAllAds", new { userId = this.Model.Id })
        </div>
        <div class="col-lg-6 gedf-main text-center">
            @if (this.User.GetId() == this.Model.Id)
            {
                <div class="card social-timeline-card">
                    <form method="post" id="postForm" asp-controller="Posts" asp-action="Create">
                        <div class="card-body">
                            <div class="tab-content" id="myTabContent">
                                <div class="tab-pane fade active show" id="posts" role="tabpanel" aria-labelledby="posts-tab">
                                    <div class="form-group">
                                        <input class="form-control" name="title" placeholder="Title" />
                                    </div>
                                </div>
                                <div class="tab-pane fade active show" id="posts" role="tabpanel" aria-labelledby="posts-tab">
                                    <div class="form-group">
                                        <textarea class="form-control" name="content" rows="3" placeholder="What are you thinking?"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="btn-toolbar justify-content-between">
                                <button type="submit" onclick="postForm.submit()" class="btn btn-primary btn-sm">Submit</button>
                            </div>
                        </div>
                    </form>
                </div>
            }
            @await this.Component.InvokeAsync("GetUserPosts", new { userId = this.Model.Id, id = Model.PagingId })
        </div>
        @await this.Component.InvokeAsync("GetSuggestionPeople", new { currentUserId = this.User.GetId(), openedUserId = this.Model.Id })
    </div>
</main>

<script>
    $(function () {
        $(".like-btn").hover(function () {
            $(".reaction-icon").each(function (i, e) {
                setTimeout(function () {
                    $(e).addClass("show");
                }, i * 100);
            });
        }, function () {
            $(".reaction-icon").removeClass("show");
        });
    })
</script>

<form method="post" id="antiForgeryForm"></form>
<script>
    $("img[data-react]").on("click", function (el) {
        var reactValue = $(this).attr("data-react");
        var postId = $(this).attr("postId");
        var reactType = $(this).attr("react-type");
        var antiForgeryToken = $('#antiForgeryForm input[name=__RequestVerificationToken]').val();
        var data = { postId: postId, reactValue: reactValue, reactType: reactType };

        console.log(postId);
        console.log(reactValue);
        console.log(reactType);
        console.log(data);

        $.ajax({
            type: "POST",
            url: "/api/PostReacts",
            data: JSON.stringify(data),
            headers: {
                'X-CSRF-TOKEN': antiForgeryToken
            },
            success: function (data) {
                $(`#reactType-${postId}`).html('<i class="fas fa-thumbs-up"> ' + reactType);
                $(`#totalReacts-${postId}`).html(data.totalReacts + " reacts");
            },
            contentType: 'application/json',
        });
    });
</script>
